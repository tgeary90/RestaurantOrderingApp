//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TabletApplication.ServiceReferenceProcessOrder {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceSendOrder")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceProcessOrder.IServiceProcessOrder")]
    public interface IServiceProcessOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProcessOrder/GetData", ReplyAction="http://tempuri.org/IServiceProcessOrder/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProcessOrder/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceProcessOrder/GetDataUsingDataContractResponse")]
        TabletApplication.ServiceReferenceProcessOrder.CompositeType GetDataUsingDataContract(TabletApplication.ServiceReferenceProcessOrder.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProcessOrder/sendOrder", ReplyAction="http://tempuri.org/IServiceProcessOrder/sendOrderResponse")]
        string sendOrder(int orderNo, string Waiter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProcessOrder/sendMeal", ReplyAction="http://tempuri.org/IServiceProcessOrder/sendMealResponse")]
        string sendMeal(int mealNo, int mealType, double mealPrice, int orderNo, int tableNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProcessOrder/getReadyOrders", ReplyAction="http://tempuri.org/IServiceProcessOrder/getReadyOrdersResponse")]
        int[] getReadyOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProcessOrder/updateOrder", ReplyAction="http://tempuri.org/IServiceProcessOrder/updateOrderResponse")]
        string updateOrder(int orderNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProcessOrder/clearOrders", ReplyAction="http://tempuri.org/IServiceProcessOrder/clearOrdersResponse")]
        string clearOrders();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProcessOrderChannel : TabletApplication.ServiceReferenceProcessOrder.IServiceProcessOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceProcessOrderClient : System.ServiceModel.ClientBase<TabletApplication.ServiceReferenceProcessOrder.IServiceProcessOrder>, TabletApplication.ServiceReferenceProcessOrder.IServiceProcessOrder {
        
        public ServiceProcessOrderClient() {
        }
        
        public ServiceProcessOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceProcessOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProcessOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProcessOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public TabletApplication.ServiceReferenceProcessOrder.CompositeType GetDataUsingDataContract(TabletApplication.ServiceReferenceProcessOrder.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public string sendOrder(int orderNo, string Waiter) {
            return base.Channel.sendOrder(orderNo, Waiter);
        }
        
        public string sendMeal(int mealNo, int mealType, double mealPrice, int orderNo, int tableNo) {
            return base.Channel.sendMeal(mealNo, mealType, mealPrice, orderNo, tableNo);
        }
        
        public int[] getReadyOrders() {
            return base.Channel.getReadyOrders();
        }
        
        public string updateOrder(int orderNo) {
            return base.Channel.updateOrder(orderNo);
        }
        
        public string clearOrders() {
            return base.Channel.clearOrders();
        }
    }
}
